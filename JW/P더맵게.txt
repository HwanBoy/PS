#include <string>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;


int solution(vector<int> scoville, int K) {
    int answer = 0;
    // Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다.
    // 모든 음식의 스코빌 지수를 K 이상으로 만들 수 없는 경우에는 -1을 return 합니다.
    priority_queue<int,vector<int>,greater<int>> pq;
    
    for(int i=0; i<scoville.size(); i++){        
        pq.push(scoville[i]);
    }
    
    
    int cnt = 0;
    while(pq.size() > 1 && pq.top() < K){
        
        int scv1 = pq.top();
        pq.pop();
        
        int scv2 = pq.top();
        pq.pop();
        
        int newSc = scv1 + (scv2 * 2);
        
        pq.push(newSc); // push 하는 동시에 정렬이 이루어짐 
        cnt++;
        
        // 1 1
    }
        
    answer = cnt;
    
    
    // 모든 음식의 스코빌 지수를 K 이상으로 만들 수 없는 경우에는 -1을 return 합니다.
    
    /*
    K 가 10000000
    1 2 3 
    1 + 4 = 5 
    5 3 
    3 5 (자동정렬) 
    3 + 10 = 13 
    
    */
    if(pq.top() < K) return -1;
    else return answer; 
    
}
