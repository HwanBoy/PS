// 일주일동안 못푸는중 머리 개썩음 
#include <string>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;


vector<vector<string>> map;
vector<string> answer;
int N, tSize;
int visited[10000] = {false,};


void dfs(int idx, string str, int cnt){
    
    
    /*
    
    answer = "ICN"
    */
    if(cnt == tSize){        
        return;
    }
    
    
    answer.push_back(str); // "ICN" INSERT
    visited[idx] = true; // "ICN" 방문체크 
    
    
    string start = "";
    start = map[idx][1]; // 인천에서 도착지가 dfs 재귀호출할때 첫 출발지 이므로 이렇게..
    
    
    for(int i=0; i<tSize; i++){
        if(visited[i] == false && map[i][0] == start){
            dfs(i,start,cnt+1);
        }
        
    }
    
    
}



vector<string> solution(vector<vector<string>> tickets) {

    
    map = tickets;
    tSize = tickets.size();
    string start = "";
    string end = "";
    
    int startIdx = 0;
    
    // ticket 첫번째 index기준정렬
    sort(map.begin(), map.end());
    
    start = "ICN";
    end = map[tSize-1][1];
    
    for(int i=0; i<tSize; i++){
        if(map[i][0] == start) {
            startIdx = i;
            break; // 시작점 정하기
        }
    }
    
    
    dfs(startIdx,start,0);                        
    
    answer.push_back(end);
    
    
    return answer;
}
