// 참고해서 품 
#include <string>
#include <vector>

using namespace std;

vector<vector<int>> map; // 이중벡터는 이차원배열이라 생각하면 되는듯
vector<bool> visited;
int ans, N;


void dfs(int node){
    
    visited[node] = true;
    
    for(int i=0; i<N; i++){
        if(map[node][i] == 1 && visited[i] == false){ // 노드인 경우 이런식으로 풀 수 있다. 단지랑 같은 방식인듯
            dfs(i);
        }
    }
}


int solution(int n, vector<vector<int>> computers) {
    
    map = computers; 
    ans  = 0;
    N = n;
    
    for(int i=0; i<n; i++){
        visited.push_back(false);    
    }
    
    
    for(int i=0; i<n; i++){
        if(visited[i] == false){
            ans++;
            dfs(i);
        }
    }
    // 결국 ANS 출력하는 것은 단지의 갯수 출력하는 것과 동일하다. 비슷한 유형
    
    return ans;
}
