import java.util.*;

class Solution {
    public int solution(int[] priorities, int location) {
        int answer = 0;
        
        Queue<Printer> que = new LinkedList();
        
        for (int i=0; i<priorities.length; i++) {
            que.add(new Printer(i, priorities[i]));
        }
        
        while (!que.isEmpty()) {
            
            int num = que.peek().prior;
            boolean check = false;
            
            for (Printer p : que) {
                if (p.prior > num) {
                    check = true;
                }
            }
            
            if (check) {
                que.add(que.poll());
            } else {
                if (que.poll().location == location) {
                    answer = priorities.length - que.size();
                }
            }
            
        }
        
        
        return answer;
    }
}

class Printer {
    int location = 0;
    int prior = 0;
    
    Printer (int location, int prior) {
        this.location = location;
        this.prior = prior;
    }
}
