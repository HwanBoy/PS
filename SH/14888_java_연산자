import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Queue;

public class Main {
	static int answerMin = 1000000000;
	static int answerMax= -1000000000;
	static int[] nums;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int numCnt = 0;
		
		String operator = "";
		List<String> operatorList = new ArrayList<String>();
		String[] operators = {"+","-","*","%"};
//---------------------------------------------------------------------입력		
		numCnt = Integer.parseInt(br.readLine());
		nums = new int[numCnt];
		
		String[] numsTmp = br.readLine().split(" ");
		String[] operatorTmp = br.readLine().split(" ");
		
		for(int i =0; i<numCnt; i++) {
			nums[i] = Integer.parseInt(numsTmp[i]);
		}
//-----------------------------------------------------------------------연산
		operatorList.add("+");
		for(int i =0; i<operatorTmp.length;i++) {
			operator = operators[i];
			int operatorCnt = Integer.parseInt(operatorTmp[i]);
			for(int l =0; l<operatorCnt; l++) {
				operatorList.add(operator);
			}	
			operator ="";
		}
//---------------------------------------------------------------------본론

			solution(nums[0],operatorList,0,0,0);
		     System.out.println(answerMax);
		     System.out.println(answerMin);

	}
	
	public static void solution(int num,List<String> operatorList, int numIdx,int idx ,int answer) {
		
	
		if(operatorList.get(idx).equals("+")) {
			answer = answer + num;
		}else if(operatorList.get(idx).equals("-")) {
			answer = answer - num;
		}else if(operatorList.get(idx).equals("*")) {
			answer = answer * num;
		}else if(operatorList.get(idx).equals("%")) {
			answer = answer / num;
		}

			operatorList.set(idx, "o");

			for(int i =0; i<operatorList.size(); i++) {
				 String operator = operatorList.get(i);
				
				if(!operator.equals("o")) {
					solution(nums[numIdx+1],operatorList,numIdx+1,i,answer);
					operatorList.set(i, operator);
				}
				
			}
		
		
		if(numIdx+1 == operatorList.size()) {
			
			if(answer<answerMin ) {
				answerMin = answer;
			}
			if(answer>answerMax ) {
				answerMax = answer;
			}
		}
	}
}
